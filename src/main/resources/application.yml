# Tomcat
server:
    tomcat:
        uri-encoding: UTF-8
        max-threads: 1000
        min-spare-threads: 30
    port: 8080
    context-path: /secwatchdog
 
#logging:
#    level: 
#        #ROOT: DEBUG
#        sec.secwatchdog: ERROR       
#    file: ./logs/application.log
#    # Logging pattern for file
#    pattern:
#        console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
#        file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
# mysql   
spring:
    profiles:
      active: dev
    # 指定静态资源的路径
    resources:
      static-locations: classpath:/,classpath:/css/,classpath:/font/,classpath:/img/,classpath:/common/
    mvc:
      view:
        prefix: /WEB-INF/
        suffix: .jsp
#    http:
#        encoding:
#           enabled: false
        
    redis:
        open: true  # 是否开启redis缓存  true开启   false关闭
        database: 0
        host: localhost
        port: 6379
        password:       # 密码（默认为空）
        timeout: 6000  # 连接超时时长（毫秒）
        pool:
            max-active: 1000  # 连接池最大连接数（使用负值表示没有限制）
            max-wait: -1      # 连接池最大阻塞等待时间（使用负值表示没有限制）
            max-idle: 10      # 连接池中的最大空闲连接
            min-idle: 5       # 连接池中的最小空闲连接
mybatis:
  #*Mapper.java可以随便放，只要和mapper.xml对应上就行
   #mapper-locations: classpath:mapper/*.xml
   #type-aliases-package: sec.secwatchdog.model

#这个插件是mybatis的分页查询
pagehelper:
   helperDialect: mysql
   reasonable: true
   supportMethodsArguments: true
   params: count=countSql